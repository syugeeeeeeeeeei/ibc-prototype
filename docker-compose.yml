version: '3.8'

services:
  metadata-chain:
    container_name: ibc-prototype-metadata-chain
    build: .
    image: datachain-image:latest
    restart: unless-stopped
    ports:
      - "26657:26657" # RPC
      - "1317:1317"   # REST API
      - "9090:9090"   # gRPC
    volumes:
      # env.shのAPP_NAME 'datachain' に合わせてマウント先を修正
      - metadata-chain-data:/home/datachain/.datachain
      - ./scripts/ibc/00_entrypoint.sh:/usr/local/bin/entrypoint.sh
    command: ["/usr/local/bin/entrypoint.sh", "metadata-chain", "uatom", "1"]
    networks:
      - ibc-net
    # RPCサーバーの起動を待つためのヘルスチェックを追加
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:26657/status"]
      interval: 5s
      timeout: 10s
      retries: 5

  data-chain-1:
    container_name: ibc-prototype-data-chain-1
    image: datachain-image:latest
    restart: unless-stopped
    volumes:
      # env.shのAPP_NAME 'datachain' に合わせてマウント先を修正
      - data-chain-1-data:/home/datachain/.datachain
      - ./scripts/ibc/00_entrypoint.sh:/usr/local/bin/entrypoint.sh
    command: ["/usr/local/bin/entrypoint.sh", "data-chain-1", "uatom", "2"]
    networks:
      - ibc-net
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:26657/status"]
      interval: 5s
      timeout: 10s
      retries: 5

  relayer:
    container_name: ibc-prototype-relayer
    image: ghcr.io/cosmos/relayer:v2.6.0
    restart: unless-stopped
    # 各チェーンのhealthcheckが通るまで起動を待つように設定
    depends_on:
      metadata-chain:
        condition: service_healthy
      data-chain-1:
        condition: service_healthy
    volumes:
      - relayer-data:/home/relayer/.relayer
      # (注意) このスクリプトは別途作成する必要があります
      - ./scripts/ibc/01_init_relayer.sh:/usr/local/bin/init_relayer.sh
    # sleepではなく、リレイヤーを初期化・起動するスクリプトを実行
    command: ["/usr/local/bin/init_relayer.sh"]
    networks:
      - ibc-net

# 使用するネットワークを定義
networks:
  ibc-net:
    driver: bridge
    name: ibc-net # ネットワーク名を固定

volumes:
  metadata-chain-data:
  data-chain-1-data:
  relayer-data: